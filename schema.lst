   2: title: 'Schema 1.4 -- Database Schema Compiler -- April 21 ''94';
      %
      %  Schema.ssl
      %
      %  HISTORY
      %    01May91   1.0   First version
      %    05May91         Record attribute class
      %    30May91   1.1   Added attribute tags
      %    09Jun93   1.2   Use schema to define schema.  Construct tree
      %                    of all definitions before tables dumped, allowing
      %                    late addition of attributes (after other
      %                    classes have been derived from this class)
      %    24Aug93   1.3   Error if no class specified to receive attribute 
      %    21Apr94   1.4   Improved database list representation, new PI,
      %                    generation of C macros
      %
      
   2: input:
      	% General
      
   2: 	pINVALID
   2: 	pEOF
   2: 	pIDENTIFIER
      
      	% Types
      
   2:         pBoolean1
   2:         pCharacter1
   2: 	pInteger4
   2:         pInteger8
   2:         pIntegerN
   2:         pReal4
   2:         pReal8
   2:         pRealN
   2:         pStringN
   2:         pObjectType
   2: 	pNode
   2: 	pList
      
      	% Option Tags
      
   2: 	pPri
   2: 	pAlt
   2: 	pOpt
   2:         pInt
   2:         pExt
   2:         pSys
   2:         pTmp
      
      	% keywords
      
   2: 	pSchema
   2: 	pRoot
   2: 	pIs
   2: 	pEnd
      
      	% Punctuation
      
   2: 	pDERIVES    '::='
   2: 	pCONTAINS   '=>'
   2: 	pCOLON      ':'
   2: 	pCOMMA      ','
   2: 	pLPAREN     '('
   2: 	pRPAREN     ')'
   2: 	pLSQUARE    '['
   2: 	pRSQUARE    ']'
   2: 	;
      
   2: output:
   2: 	;
      
   2: error:
   2: 	eNoClassForAttribute     % attribute defined while no current class set
   2: 	;
      
   2: include 'schema_schema.ssl'
      
      % Generated automatically by schema
      
   2: type node_type:
   2: 	nINVALID
   2: 	Object
   2: 	nSchema
   2: 	nClass
   2: 	nAttr
   2: 	nConstraint
   2: 	nAttrSym
   2: 	;
      
   2: type node_attribute:
   2: 	qINVALID
   2: 	qClassTree
   2: 	qAttrSyms
   2: 	qAllClasses
   2: 	qIdent
   2: 	qText
   2: 	qCode
   2: 	qAttrs
   2: 	qDerived
   2: 	qAttrSym
   2: 	qConstraint
   2: 	qTags
   2: 	qType
   2: 	;
      
      
   2: type aType:              % attribute type
   2: 	type_INVALID    = 0
   2: 	type_Boolean1   = 1
   2: 	type_Character1 = 2
   2: 	type_Integer4   = 4
   2: 	type_Real8      = 5
   2: 	type_StringN    = 10
   2: 	type_Node       = 100
   2: 	type_List       = 150
   2: 	;
      
   2: type aTag:               % attribute tags (defined as bits)
   2: 	tag_INVALID = 0
   2: 	tag_Pri     = 1
   2: 	tag_Opt     = 2
   2: 	tag_Alt     = 4
   2: 	;
      
   2: type boolean:
   2: 	false       = 0
   2:         true        = 1
   2: 	;
      
   2: mechanism Class:		% operations on classes
   2: 	oCreateEmptySchema	% create initial schema database, containing a SchemaRoot,
      				% nInvalid class, qInvalid attribute symbol,
      				% and 'Object' class for basis of all derivation.
   2: 	oFindClass		% find class named by last accepted identifier (must exist).
      				% Sets the Current class to that class.
   2: 	oDeriveClass		% Create new class named by last accepted identifier
      				% (must not exist already).  The new object is derived
      				% from the Current class (found with oFindClass).
   2: 	oThisClassWillGetAttrs	% Sets the GetsAttrs class to the Current class
      				% (found with oFindClass).  attrs defined with the
      				% Attr mechanism will be added to the GetsAttrs class.
   2: 	oNoClassWillGetAttrs	% Sets GetsAttrs to NULL.  No attribute definitions
      				% may be added to any class.
   2: 	oAClassWillGetAttrs >> boolean   % Is there a class defined to accept attributes?
   2: 	;
      
   2: mechanism Attr:			% operations on attributes
   2: 	oCreateAttrSym		% Searches for an nAttrSym with qIdent = the
      				% last accepted identifier.
      				% If doesn't exist yet, creates one and assigns
      				% a new qCode to it (the code for the AttrSym)
      				% and appends it to the schema's AttrSyms list.
      				% Sets CurrentAttrSym to that AttrSym.
      
   2: 	oCreateAttr		% create new attribute.
      				% Sets qAttrSym to CurrentAttrSym (found/created.
      				% by oCreateAttrSym).
      				% Sets CurrentAttr to that attribute.
   2: 	oAttrType (aType)	% Sets the type of the CurrentAttr
   2: 	oAttrTag (aTag)		% Sets a tag in the CurrentAttr.  Tag bits are 'or'd together.
   2: 	;
      
   2: mechanism doc:
   2: 	oDocDumpTable     % dump results
   2: 	;
      
      
   2: rules
      
   2: Schema:
   4: 	oCreateEmptySchema
      
   5: 	@schema_header
      
   7: 	{
   7: 	    [ | pEnd, pEOF : > | * : ]
      
  18: 	    pIDENTIFIER
  20: 	    [
  20: 		| '::=' :	@class_derivation
      
  24: 		| '=>' :	@attribute_assignment
      
  28: 		| ':' :		@attribute_definition
  32: 	    ]
  42: 	}
      
  44: 	oDocDumpTable
  46: 	;
      
      
  46: schema_header:
  48: 	pSchema
  50: 	pIDENTIFIER    % name of schema
  52: 	pRoot
  54: 	pIDENTIFIER    % name of root object
  56: 	pIs
  59: 	;
      
      
  59: class_derivation:
  61: 	oFindClass
  62: 	pIDENTIFIER
  64: 	oDeriveClass
      
  65: 	oNoClassWillGetAttrs	% disallow attribute definitions for now
  67: 	;
      
  67: attribute_assignment:
  69: 	oFindClass
  70: 	oThisClassWillGetAttrs
  72: 	;
      
  72: attribute_definition:
      
  74: 	[ oAClassWillGetAttrs
  76: 	    | true:
  77: 	    | false:  #eNoClassForAttribute     % attribute defined while no current class set
  81: 	]
      
  89: 	oCreateAttrSym
  90: 	oCreateAttr
      	
  91: 	[
  91:             | pBoolean1 :      oAttrType (type_Boolean1)
  99:             | pCharacter1 :    oAttrType (type_Character1)
 107:             | pInteger4,
 109:               pInteger8,
 109:               pIntegerN,
 109:               pObjectType :    oAttrType (type_Integer4)
 115:             | pReal4,
 117:               pReal8,
 117:               pRealN :         oAttrType (type_Real8)
 123:             | pStringN :       oAttrType (type_StringN)
 131: 	    | pList :          oAttrType (type_List)
 139: 	    | pNode :          oAttrType (type_Node)
 147: 	]
      
 175: 	[
 175: 	    | '(' :  pIDENTIFIER    % constraint ignored for now
 179:                      ')'
 181: 	    | * :
 186: 	]
      
 186: 	[
 186: 	    | '[' :  {[
 188: 	                 | pPri :  oAttrTag (tag_Pri)
 196: 	                 | pAlt :  oAttrTag (tag_Alt)
 204: 	                 | pOpt :  oAttrTag (tag_Opt)
 212: 	                 | ',' :
 214: 	                 | * :    >
 227: 	             ]}
 229: 	             ']'
 231: 	    | * :
 236: 	]
 237: 	;
      
 237: end
      
 237: 
